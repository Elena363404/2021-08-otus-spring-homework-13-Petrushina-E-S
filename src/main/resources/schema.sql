DROP TABLE IF EXISTS COMMENT;
DROP TABLE IF EXISTS BOOK;
DROP TABLE IF EXISTS AUTHOR;
DROP TABLE IF EXISTS GENRE;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS ROLE;
DROP TABLE IF EXISTS USERS_ROLE;

CREATE TABLE AUTHOR(
  ID BIGSERIAL PRIMARY KEY NOT NULL,
  NAME VARCHAR(255)
);

CREATE TABLE GENRE(
  ID BIGSERIAL PRIMARY KEY NOT NULL,
  NAME VARCHAR(255)
);

CREATE TABLE BOOK(
  ID BIGSERIAL PRIMARY KEY NOT NULL,
  NAME VARCHAR(255),
  AUTHOR_ID BIGINT,
  GENRE_ID BIGINT,
  CONSTRAINT refBookToAuth FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHOR(ID),
  CONSTRAINT refBookToGenre FOREIGN KEY (GENRE_ID) REFERENCES GENRE(ID)
);

CREATE TABLE COMMENT(
  ID BIGSERIAL PRIMARY KEY NOT NULL,
  COMMENT VARCHAR(255),
  BOOK_ID BIGINT,
  CONSTRAINT refCommentToBook FOREIGN KEY (BOOK_ID) references BOOK(id));

CREATE TABLE USERS(
  ID BIGSERIAL PRIMARY KEY NOT NULL,
  USERNAME VARCHAR(50) NOT NULL,
  PASSWORD VARCHAR(100) NOT NULL,
  ENABLED SMALLINT NOT NULL DEFAULT 1
);

CREATE TABLE ROLE (
  ID BIGSERIAL PRIMARY KEY NOT NULL,
  name varchar(45) NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE USERS_ROLE(
  user_id BIGINT NOT NULL,
  role_id BIGINT NOT NULL,
  CONSTRAINT role_fk FOREIGN KEY (role_id) REFERENCES role (id),
  CONSTRAINT user_fk FOREIGN KEY (user_id) REFERENCES users (id)
);

